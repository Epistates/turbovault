# ==============================================================================
# mcpobsidian Environment Variables
# ==============================================================================
#
# Copy this file to .env and customize for your environment
# Note: .env files are loaded automatically if present
#
# Usage:
#   cp .env.example .env
#   # Edit .env with your values
#   source .env
#   mcp-obsidian --init
#
# ==============================================================================

# ------------------------------------------------------------------------------
# VAULT CONFIGURATION
# ------------------------------------------------------------------------------

# Path to your Obsidian vault (required if not using --vault CLI arg)
# Use absolute paths for best results
#
# macOS/Linux example:
OBSIDIAN_VAULT_PATH=/Users/yourname/Documents/ObsidianVault
#
# Windows example (use forward slashes):
# OBSIDIAN_VAULT_PATH=C:/Users/yourname/Documents/ObsidianVault
#
# Docker example:
# OBSIDIAN_VAULT_PATH=/var/obsidian-vault

# ------------------------------------------------------------------------------
# LOGGING CONFIGURATION
# ------------------------------------------------------------------------------

# Log level: trace, debug, info, warn, error
# This controls the verbosity of log output
#
# Development (verbose):
RUST_LOG=debug
#
# Production (balanced):
# RUST_LOG=info
#
# Production with debug for mcpobsidian only:
# RUST_LOG=info,mcpobsidian=debug
#
# Multi-crate filtering:
# RUST_LOG=info,mcpobsidian=debug,turbomcp=trace
#
# Quiet (warnings and errors only):
# RUST_LOG=warn

# ------------------------------------------------------------------------------
# OPENTELEMETRY (Optional)
# ------------------------------------------------------------------------------

# OpenTelemetry exporter endpoint (for distributed tracing)
# Uncomment and set if using Jaeger, Zipkin, or OTLP collector
#
# Jaeger OTLP endpoint:
# OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317
#
# Custom collector:
# OTEL_EXPORTER_OTLP_ENDPOINT=https://otel-collector.yourcompany.com:4317

# OpenTelemetry service name (default: mcpobsidian)
# OTEL_SERVICE_NAME=mcpobsidian

# OpenTelemetry service version (default: from Cargo.toml)
# OTEL_SERVICE_VERSION=1.0.0

# OpenTelemetry resource attributes (optional metadata)
# OTEL_RESOURCE_ATTRIBUTES=environment=production,region=us-east-1

# Enable/disable tracing (default: true if OTEL_EXPORTER_OTLP_ENDPOINT is set)
# OTEL_SDK_DISABLED=false

# ------------------------------------------------------------------------------
# CONFIGURATION FILE (Optional)
# ------------------------------------------------------------------------------

# Path to YAML configuration file (alternative to CLI --config flag)
# MCP_OBSIDIAN_CONFIG=/path/to/config.yaml

# ------------------------------------------------------------------------------
# SERVER CONFIGURATION (Future HTTP Transport)
# ------------------------------------------------------------------------------

# HTTP server port (currently unused, STDIO is the only transport)
# MCP_PORT=3000

# Server host/bind address (currently unused)
# MCP_HOST=0.0.0.0

# ------------------------------------------------------------------------------
# PROFILE SELECTION (Optional)
# ------------------------------------------------------------------------------

# Configuration profile: development, production, readonly, high-performance, minimal
# Note: CLI --profile flag takes precedence over this variable
#
# Development:
# MCP_PROFILE=development
#
# Production:
# MCP_PROFILE=production
#
# Read-only:
# MCP_PROFILE=readonly
#
# High-performance (large vaults):
# MCP_PROFILE=high-performance
#
# Minimal (resource-constrained):
# MCP_PROFILE=minimal

# ------------------------------------------------------------------------------
# PERFORMANCE TUNING (Optional)
# ------------------------------------------------------------------------------

# Number of worker threads for async runtime
# Default: number of CPU cores
# TOKIO_WORKER_THREADS=8

# Enable tokio console for debugging (development only)
# TOKIO_CONSOLE=1

# ------------------------------------------------------------------------------
# SECURITY (Optional)
# ------------------------------------------------------------------------------

# Enable security auditing (logs all file operations)
# Default: true in production profile
# MCP_SECURITY_AUDIT=true

# Maximum file size (bytes) to prevent loading huge files
# Default: 5242880 (5MB)
# MCP_MAX_FILE_SIZE=5242880

# ------------------------------------------------------------------------------
# SEARCH CONFIGURATION (Optional)
# ------------------------------------------------------------------------------

# Enable/disable full-text search
# Default: true
# MCP_SEARCH_ENABLED=true

# Maximum search results to return
# Default: 50
# MCP_SEARCH_MAX_RESULTS=50

# Enable fuzzy search (typo tolerance)
# Default: false
# MCP_SEARCH_FUZZY=false

# ------------------------------------------------------------------------------
# EXAMPLES FOR DIFFERENT ENVIRONMENTS
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# DEVELOPMENT ENVIRONMENT
# ------------------------------------------------------------------------------
# Uncomment these for local development:
#
# OBSIDIAN_VAULT_PATH=/Users/yourname/Documents/ObsidianVault
# RUST_LOG=debug
# MCP_PROFILE=development
# OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317

# ------------------------------------------------------------------------------
# PRODUCTION ENVIRONMENT
# ------------------------------------------------------------------------------
# Uncomment these for production deployment:
#
# OBSIDIAN_VAULT_PATH=/var/obsidian-vault
# RUST_LOG=info,mcpobsidian=debug
# MCP_PROFILE=production
# MCP_SECURITY_AUDIT=true
# OTEL_EXPORTER_OTLP_ENDPOINT=https://otel-collector.yourcompany.com:4317
# OTEL_RESOURCE_ATTRIBUTES=environment=production,region=us-east-1

# ------------------------------------------------------------------------------
# DOCKER ENVIRONMENT
# ------------------------------------------------------------------------------
# Uncomment these when running in Docker:
#
# OBSIDIAN_VAULT_PATH=/var/obsidian-vault
# RUST_LOG=info
# MCP_PROFILE=production

# ------------------------------------------------------------------------------
# CI/CD ENVIRONMENT
# ------------------------------------------------------------------------------
# Uncomment these for CI/CD pipelines:
#
# OBSIDIAN_VAULT_PATH=/tmp/test-vault
# RUST_LOG=warn
# MCP_PROFILE=minimal

# ------------------------------------------------------------------------------
# LARGE VAULT (10k+ notes)
# ------------------------------------------------------------------------------
# Uncomment these for high-performance with large vaults:
#
# OBSIDIAN_VAULT_PATH=/path/to/large/vault
# RUST_LOG=info
# MCP_PROFILE=high-performance
# MCP_SEARCH_MAX_RESULTS=20
# TOKIO_WORKER_THREADS=16

# ------------------------------------------------------------------------------
# READ-ONLY MODE (Safe Exploration)
# ------------------------------------------------------------------------------
# Uncomment these for read-only access:
#
# OBSIDIAN_VAULT_PATH=/path/to/vault
# RUST_LOG=info
# MCP_PROFILE=readonly
# MCP_SECURITY_AUDIT=true

# ==============================================================================
# NOTES
# ==============================================================================
#
# Environment Variable Precedence:
# 1. CLI arguments (highest priority)
# 2. Environment variables
# 3. Config file (config.yaml)
# 4. Built-in defaults (lowest priority)
#
# Best Practices:
# - Use absolute paths for OBSIDIAN_VAULT_PATH
# - Set RUST_LOG=info in production (debug is very verbose)
# - Enable OTEL tracing in production for observability
# - Use MCP_PROFILE to switch between configurations easily
# - Never commit .env to version control (add to .gitignore)
#
# Debugging:
# - Set RUST_LOG=debug for verbose logging
# - Set RUST_LOG=trace for extremely detailed logs
# - Use TOKIO_CONSOLE=1 for async runtime debugging
# - Check logs with: tail -f debug.log
#
# Security:
# - Enable MCP_SECURITY_AUDIT in production
# - Restrict OBSIDIAN_VAULT_PATH to necessary vaults only
# - Use MCP_PROFILE=readonly for untrusted agents
# - Review audit logs regularly
#
# Performance:
# - Increase TOKIO_WORKER_THREADS for large vaults
# - Use MCP_PROFILE=high-performance for 10k+ notes
# - Reduce MCP_SEARCH_MAX_RESULTS to limit memory usage
# - Consider splitting very large vaults into multiple smaller ones
#
# ==============================================================================
